import { execSync } from 'child_process';

const handler = async (m, { conn, text }) => {
try {
const stdout = execSync('git pull' + (m.fromMe && text ? ' ' + text : ''));
let messager = stdout.toString()
if (messager.includes('Already up to date.')) messager = `‚ö†Ô∏è ùôîùòº ùôÄùôéùôèùòº ùòºùòæùôèùôêùòºùôáùôÑùôïùòºùòøùôä ùòº ùôáùòº ùôëùôÄùôçùôéùôÑùôäÃÅùôâ ùôçùôÄùòæùôÑùôÄùôâùôèùôÄ.`
if (messager.includes('Updating')) messager = `*[ UPDATE ]*\n\n` + stdout.toString()
conn.reply(m.chat, messager, m);
} catch {      
try {    
const status = execSync('git status --porcelain');
if (status.length > 0) {
const conflictedFiles = status
.toString()
.split('\n')
.filter(line => line.trim() !== '')
.map(line => {
if (line.includes('.npm/') || line.includes('.cache/') || line.includes('tmp/') || line.includes('BotSession/') || line.includes('npm-debug.log')) {
return null;
}
return '*‚Üí ' + line.slice(3) + '*'})
.filter(Boolean);
if (conflictedFiles.length > 0) {
const errorMessage = `‚ö†Ô∏è Error\n> *–í —Ñ–∞–π–ª–∞—Ö –±–æ—Ç–∞ –±—ã–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—É–ø–∞—é—Ç –≤ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ —Å –Ω–æ–≤—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å, –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é.*\n\n*\`–ö–û–ù–§–õ–ò–ö–¢–£–Æ–©–ò–ô –§–ê–ô–õ :\`*\n\n${conflictedFiles.join('\n')}.*`
await conn.reply(m.chat, errorMessage, m);  
}}
} catch (error) {
console.error(error);
if (error.message) {
const errorMessage2 = `\n‚ö†Ô∏è ` + error.message;
}
await m.reply(`‚ö†Ô∏è –û–®–ò–ë–ö–ê, –ß–¢–û –°–õ–£–ß–ò–õ–û–°–¨, –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±—è —Å –≥—Ä–µ–±–∞–Ω–æ–≥–æ –∏–¥–∏–æ—Ç—Å–∫–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ üôÑ`) 
}}};
handler.help = ['update']
handler.tags = ['owner']
handler.command = /^(–æ–±|actualizar|–æ–±–Ω–æ–≤–∏—Ç—å)$/i;
handler.owner = true;
export default handler;
